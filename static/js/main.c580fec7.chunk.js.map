{"version":3,"sources":["services/AlbumService/index.js","contexts/AlbumContext.js","services/GoogleDriveService/index.js","contexts/WeekContext.js","components/WeekNumber/PrevNextWeek.js","components/WeekNumber/WeekNavigation.js","components/WeekNumber/index.js","components/Backdrop/index.js","components/AlbumView/AlbumArt.js","components/AlbumView/ExternalLink.js","components/AlbumView/Tags.js","components/AlbumView/LinkIcon.js","components/AlbumView/ButtonLink.js","components/AlbumView/AlbumMeta.js","components/AlbumView/index.js","components/Footer/index.js","util/index.js","App.js","serviceWorker.js","index.js"],"names":["PUBLIC_KEY","buildParams","method","album","artist","autoCorrect","str","encodeURIComponent","findYearInTags","tags","matchingTags","filter","tag","test","name","length","convertToAlbum","url","image","tracks","urls","type","year","getStorageKey","encodeURI","toLowerCase","cacheAlbum","data","sessionStorage","setItem","JSON","stringify","getCachedAlbum","albumData","getItem","parse","AlbumService","Error","cachedAlbumData","body","fetch","then","res","a","ok","json","response","error","convertedAlbum","AlbumContext","React","createContext","AlbumProvider","props","state","loaded","loadAlbumData","weekInfo","setState","getAlbumByNameAndArtist","push","spotifyUrl","forWeek","week","Preload","onSingleImageComplete","updateLoadingProgress","this","children","Provider","value","Component","getCell","spreadSheetRow","cellKey","$t","convertSpreadSheetToWeekInfo","spreadSheet","feed","entry","gsx$week","map","GoogleDriveService","WeekContext","WeekProvider","weekRows","getWeekRows","PrevNextWeek","displayedWeek","weeks","weekIndex","indexOf","isLastWeek","hasPreviousWeeks","className","to","title","WeekNavigation","useContext","id","useParams","useState","setFilter","weeksToShow","baseFilter","toString","some","searchable","includes","currentWeek","parseInt","onChange","target","placeholder","key","WeekNumber","weekNumberFromParam","row","latestEntryWeek","sort","b","pop","Backdrop","items","style","backgroundImage","transitionName","transitionEnterTimeout","transitionLeaveTimeout","AlbumArt","imageUrl","alt","src","ExternalLink","rel","href","defaultProps","Tags","SpotifyIcon","width","height","xmlns","fillRule","clipRule","fill","d","LastFMIcon","viewBox","LinkIcon","ButtonLink","getLinkText","AlbumMeta","lastFMUrl","find","artistUrl","substr","lastIndexOf","AlbumView","shouldAnimateIn","setShouldAnimateIn","setTimeout","Footer","role","aria-label","getWeek","date","Date","setHours","setDate","getDate","getDay","week1","getFullYear","Math","round","getTime","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c580fec7.chunk.js","sourcesContent":["// Please don't use this :(\nconst PUBLIC_KEY = '2729fff6586466b0db95b377fc7597c3';\nconst BASE_URL = 'https://ws.audioscrobbler.com/2.0/';\n\nconst buildParams = (method, album, artist, autoCorrect = 1) => {\n  let str = '';\n  if (method) str = `${str}?method=${method}`;\n  if (album) str = `${str}&album=${encodeURIComponent(album)}`;\n  if (artist) str = `${str}&artist=${encodeURIComponent(artist)}`;\n  if (autoCorrect) str = `${str}&autocorrect=${autoCorrect}`;\n  return `${str}&api_key=${PUBLIC_KEY}&format=json`;\n};\n\nconst findYearInTags = tags => {\n  const matchingTags = tags.filter(\n    tag => /^\\d+$/.test(tag.name) && tag.name.length === 4,\n  );\n  if (matchingTags.length === 0) return null;\n  return matchingTags[0].name;\n};\n\nconst convertToAlbum = ({ name, artist, url, image, tracks, tags }) => ({\n  name,\n  artist,\n  urls: [{ type: 'lastfm', url }],\n  tracks,\n  tags: tags.tag,\n  year: findYearInTags(tags.tag),\n  image: image.length > 0 ? image[image.length - 1]['#text'] : null,\n});\n\nconst getStorageKey = (album = '', artist = '') =>\n  encodeURI(`${album.toLowerCase()}-${artist.toLowerCase()}`);\n\nconst cacheAlbum = (data, album, artist) => {\n  sessionStorage.setItem(getStorageKey(album, artist), JSON.stringify(data));\n};\n\nconst getCachedAlbum = (album, artist) => {\n  const albumData = sessionStorage.getItem(getStorageKey(album, artist));\n  return albumData ? JSON.parse(albumData) : null;\n};\n\nclass AlbumService {\n  static async getAlbumByNameAndArtist(album, artist) {\n    if (!album || !artist)\n      throw new Error('Both album and artist needs to be passed');\n\n    const cachedAlbumData = getCachedAlbum(album, artist);\n    if (cachedAlbumData) return cachedAlbumData;\n\n    const body = buildParams('album.getInfo', album, artist);\n    return fetch(BASE_URL + body).then(async res => {\n      if (!res.ok) throw new Error('Unable to get album data!');\n      const response = await res.json();\n      if (response.error) {\n        throw new Error(\n          'Unable to get album data, if the drive documented correct?',\n        );\n      }\n      const convertedAlbum = convertToAlbum(response.album);\n      cacheAlbum(convertedAlbum, album, artist);\n      return convertedAlbum;\n    });\n  }\n}\n\nexport default AlbumService;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Preload from 'image-preload';\nimport AlbumService from '../services/AlbumService';\n\nconst AlbumContext = React.createContext();\n\nexport class AlbumProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      albumData: null,\n      loadAlbumData: async weekInfo => {\n        const { loaded } = this.state;\n        if (loaded) {\n          this.setState({ loaded: false });\n        }\n        const albumData = await AlbumService.getAlbumByNameAndArtist(\n          weekInfo.album,\n          weekInfo.artist,\n        );\n\n        albumData.urls.push({ type: 'spotify', url: weekInfo.spotifyUrl });\n        albumData.forWeek = weekInfo.week;\n        this.setState(\n          {\n            albumData,\n          },\n          () => {\n            Preload([albumData.image], {\n              onSingleImageComplete: () => {\n                this.updateLoadingProgress();\n              },\n            });\n          },\n        );\n      },\n    };\n  }\n\n  updateLoadingProgress() {\n    this.setState({\n      loaded: true,\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { albumData, loadAlbumData, loaded } = this.state;\n\n    return (\n      <AlbumContext.Provider\n        value={{\n          albumData,\n          loaded,\n          loadAlbumData,\n        }}\n      >\n        {children}\n      </AlbumContext.Provider>\n    );\n  }\n}\n\nAlbumProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AlbumContext;\n","const SPREADSHEET_URL =\n  // eslint-disable-next-line max-len\n  'https://spreadsheets.google.com/feeds/list/1_7q9jusMZAvBBdk4cHoSg-LhjswU76k0XvGv1EC66u0/od6/public/values?alt=json';\n\nconst getSpreadSheet = () =>\n  fetch(SPREADSHEET_URL).then(async res => {\n    if (!res.ok) throw new Error('Unable to get google spreadsheet!');\n    const response = await res.json();\n    return response;\n  });\n\nconst getCell = (spreadSheetRow, cellKey) =>\n  spreadSheetRow[`gsx$${cellKey}`].$t;\n\nconst convertSpreadSheetToWeekInfo = spreadSheet => {\n  const weekEntries = spreadSheet.feed.entry.filter(entry => entry.gsx$week.$t);\n  return weekEntries.map(entry => ({\n    week: +getCell(entry, 'week'),\n    album: getCell(entry, 'album'),\n    artist: getCell(entry, 'artist'),\n    spotifyUrl: getCell(entry, 'spotify'),\n  }));\n};\n\nclass GoogleDriveService {\n  static async getWeekRows() {\n    const spreadSheet = await getSpreadSheet();\n    return convertSpreadSheetToWeekInfo(spreadSheet);\n  }\n}\n\nexport default GoogleDriveService;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleDriveService from '../services/GoogleDriveService';\n\nconst WeekContext = React.createContext();\n\nexport class WeekProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weekRows: null,\n    };\n  }\n\n  async componentDidMount() {\n    const weekRows = await GoogleDriveService.getWeekRows();\n    this.setState({ weekRows });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { weekRows } = this.state;\n    return (\n      <WeekContext.Provider value={{ weekRows }}>\n        {children}\n      </WeekContext.Provider>\n    );\n  }\n}\n\nWeekProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default WeekContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst PrevNextWeek = ({ displayedWeek, weeks }) => {\n  const weekIndex = weeks.indexOf(displayedWeek);\n  const isLastWeek = weeks[weeks.length - 1] === displayedWeek;\n  const hasPreviousWeeks = weekIndex > 0;\n\n  return (\n    <>\n      {hasPreviousWeeks && (\n        <Link\n          className=\"week-number--navigation right\"\n          to={`/week/${weeks[weekIndex - 1]}`}\n          title=\"Previous week\"\n        >\n          <span>←</span>\n        </Link>\n      )}\n      {!isLastWeek && (\n        <Link\n          className=\"week-number--navigation left\"\n          to={`/week/${weeks[weekIndex + 1]}`}\n          title=\"Next week\"\n        >\n          <span>→</span>\n        </Link>\n      )}\n    </>\n  );\n};\n\nPrevNextWeek.propTypes = {\n  displayedWeek: PropTypes.number.isRequired,\n  weeks: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default PrevNextWeek;\n","import React, { useState, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport PrevNextWeek from './PrevNextWeek';\nimport WeekContext from '../../contexts/WeekContext';\n\nconst WeekNavigation = () => {\n  const { weekRows } = useContext(WeekContext);\n  const { id } = useParams();\n  const [filter, setFilter] = useState('');\n  if (!weekRows) return null;\n\n  const weeksToShow = weekRows.filter(({ week, artist, album }) => {\n    if (!filter) return true;\n    const baseFilter = filter.toLowerCase();\n    const searchables = [week.toString(), album, artist];\n    return searchables.some(searchable =>\n      searchable.toLowerCase().includes(baseFilter),\n    );\n  });\n  const currentWeek = parseInt(id, 10);\n\n  return (\n    <>\n      <div className=\"week-number--nav-container\">\n        <div className=\"week-number--list-header\">\n          <input\n            className=\"filter-input\"\n            onChange={({ target: { value } }) => setFilter(value)}\n            placeholder=\"Filter albums\"\n          />\n        </div>\n        <div className=\"week-number--list\">\n          {weeksToShow.map(({ week, album, artist }) => (\n            <Link\n              key={`listnav-${week}`}\n              className=\"week-number--list-item\"\n              to={`/week/${week}`}\n            >\n              <div className=\"week-number--list-item--week\">\n                <span>{week}</span>\n              </div>\n              {album} - {artist}\n              {week === currentWeek && (\n                <span className=\"secondary-label\">(Current week)</span>\n              )}\n            </Link>\n          ))}\n        </div>\n      </div>\n      <PrevNextWeek\n        displayedWeek={currentWeek}\n        weeks={weekRows.map(({ week }) => week)}\n      />\n    </>\n  );\n};\n\nexport default WeekNavigation;\n","import React, { useContext } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport WeekContext from '../../contexts/WeekContext';\nimport WeekNavigation from './WeekNavigation';\nimport './style.css';\n\nconst WeekNumber = () => {\n  const { weekRows } = useContext(WeekContext);\n  const { id } = useParams();\n\n  if (!weekRows || !id) {\n    return null;\n  }\n  const weekNumberFromParam = parseInt(id, 10);\n  const weekRow = weekRows.filter(row => row.week === weekNumberFromParam)[0];\n\n  if (!weekRow) {\n    const latestEntryWeek = weekRows\n      .map(row => row.week)\n      .sort((a, b) => a - b)\n      .pop();\n\n    return <Redirect to={`/week/${latestEntryWeek}`} />;\n  }\n\n  return (\n    <div className=\"week-number\">\n      <div className=\"week-number--current\" title={`Now showing week ${id}`}>\n        {id}\n      </div>\n      <WeekNavigation />\n    </div>\n  );\n};\n\nexport default WeekNumber;\n","import React, { useContext } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport AlbumContext from '../../contexts/AlbumContext';\nimport './style.css';\n\nconst Backdrop = () => {\n  const { loaded, albumData } = useContext(AlbumContext);\n\n  const items = [];\n  if (loaded && albumData.image) {\n    items.push(\n      <div\n        className=\"backdrop\"\n        style={{\n          backgroundImage: `url(\"${albumData.image}\")`,\n        }}\n      />,\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      transitionName=\"opacity-anim\"\n      transitionEnterTimeout={100}\n      transitionLeaveTimeout={300}\n    >\n      {items}\n    </CSSTransitionGroup>\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AlbumArt = ({ imageUrl }) => (\n  <div key=\"art\" className=\"album-info--cover\">\n    <img alt=\"album cover\" src={imageUrl} />\n  </div>\n);\n\nAlbumArt.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n};\n\nexport default AlbumArt;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExternalLink = ({ url, children, ...props }) => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href={url} {...props}>\n    {children}\n  </a>\n);\n\nExternalLink.defaultProps = {\n  children: [],\n};\n\nExternalLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default ExternalLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from './ExternalLink';\n\nconst Tags = ({ tags }) => {\n  if (tags.length === 0) return null;\n\n  return (\n    <div className=\"tags\">\n      {tags.map(({ name, url }) => (\n        <ExternalLink key={name + url} className=\"tag\" url={url}>\n          #{name}\n        </ExternalLink>\n      ))}\n    </div>\n  );\n};\n\nTags.defaultProps = {\n  tags: [],\n};\n\nTags.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.any),\n};\n\nexport default Tags;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SpotifyIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  >\n    <path\n      fill=\"#1DB954\"\n      // eslint-disable-next-line max-len\n      d=\"M19.098 10.638c-3.868-2.297-10.248-2.508-13.941-1.387-.593.18-1.22-.155-1.399-.748-.18-.593.154-1.22.748-1.4 4.239-1.287 11.285-1.038 15.738 1.605.533.317.708 1.005.392 1.538-.316.533-1.005.709-1.538.392zm-.126 3.403c-.272.44-.847.578-1.287.308-3.225-1.982-8.142-2.557-11.958-1.399-.494.15-1.017-.129-1.167-.623-.149-.495.13-1.016.624-1.167 4.358-1.322 9.776-.682 13.48 1.595.44.27.578.847.308 1.286zm-1.469 3.267c-.215.354-.676.465-1.028.249-2.818-1.722-6.365-2.111-10.542-1.157-.402.092-.803-.16-.895-.562-.092-.403.159-.804.562-.896 4.571-1.045 8.492-.595 11.655 1.338.353.215.464.676.248 1.028zm-5.503-17.308c-6.627 0-12 5.373-12 12 0 6.628 5.373 12 12 12 6.628 0 12-5.372 12-12 0-6.627-5.372-12-12-12z\"\n    />\n  </svg>\n);\n\nconst LastFMIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      fill=\"#D41E08\"\n      // eslint-disable-next-line max-len\n      d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm3.664 15.889c-2.773 0-3.736-1.25-4.248-2.806l-.515-1.604c-.385-1.17-.834-2.084-2.244-2.084-.979 0-1.974.706-1.974 2.678 0 1.539.786 2.502 1.894 2.502 1.249 0 2.083-.931 2.083-.931l.515 1.396s-.866.85-2.679.85c-2.245-.001-3.496-1.316-3.496-3.754 0-2.534 1.251-4.025 3.607-4.025 2.133 0 3.208.77 3.881 2.854l.53 1.604c.385 1.171 1.058 2.021 2.678 2.021 1.091 0 1.668-.24 1.668-.834 0-.465-.273-.802-1.09-.994l-1.091-.256c-1.331-.321-1.861-1.01-1.861-2.101 0-1.748 1.412-2.293 2.854-2.293 1.638 0 2.63.593 2.759 2.037l-1.604.192c-.063-.69-.48-.979-1.251-.979-.706 0-1.138.321-1.138.866 0 .481.208.77.914.93l1.025.225c1.381.321 2.119.994 2.119 2.293 0 1.603-1.347 2.213-3.336 2.213z\"\n    />\n  </svg>\n);\n\nconst LinkIcon = ({ type }) => {\n  switch (type) {\n    case 'spotify':\n      return <SpotifyIcon />;\n    case 'lastfm':\n      return <LastFMIcon />;\n    default:\n      return null;\n  }\n};\n\nLinkIcon.propTypes = {\n  type: PropTypes.oneOf(['spotify', 'lastfm']).isRequired,\n};\n\nexport default LinkIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkIcon from './LinkIcon';\nimport ExternalLink from './ExternalLink';\n\nconst getLinkText = type => {\n  switch (type) {\n    case 'spotify':\n      return 'Listen on Spotify';\n    case 'lastfm':\n      return 'LastFm';\n    default:\n      return null;\n  }\n};\n\nconst ButtonLink = ({ type, url }) => (\n  <ExternalLink className=\"external-action\" url={url}>\n    <LinkIcon type={type} />\n    {getLinkText(type)}\n  </ExternalLink>\n);\n\nButtonLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ButtonLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from './ExternalLink';\nimport Tags from './Tags';\nimport ButtonLink from './ButtonLink';\n\nconst AlbumMeta = ({ albumData: { name, year, artist, urls, tags } }) => {\n  const lastFMUrl = urls.find(url => url.type === 'lastfm').url;\n  const artistUrl = lastFMUrl.substr(0, lastFMUrl.lastIndexOf('/'));\n\n  return (\n    <div key=\"information\" className=\"album-info--meta\">\n      <h1 className=\"heading\">\n        <ExternalLink url={lastFMUrl}>{name}</ExternalLink>\n      </h1>\n      <p className=\"subheading\">\n        <ExternalLink url={artistUrl}>{artist}</ExternalLink>{' '}\n        <span className=\"year\">{year}</span>\n      </p>\n      <Tags tags={tags} />\n      {urls.map(({ type, url }) => (\n        <ButtonLink key={type} type={type} url={url} />\n      ))}\n    </div>\n  );\n};\n\nAlbumMeta.propTypes = {\n  albumData: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    year: PropTypes.string,\n    artist: PropTypes.string.isRequired,\n    urls: PropTypes.array.isRequired,\n    tags: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default AlbumMeta;\n","import React, { useContext, useState } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { useParams } from 'react-router-dom';\n\nimport AlbumContext from '../../contexts/AlbumContext';\nimport WeekContext from '../../contexts/WeekContext';\nimport AlbumArt from './AlbumArt';\nimport AlbumMeta from './AlbumMeta';\nimport './style.css';\n\nconst AlbumView = () => {\n  const { weekRows } = useContext(WeekContext);\n  const { albumData, loaded, loadAlbumData } = useContext(AlbumContext);\n\n  const [shouldAnimateIn, setShouldAnimateIn] = useState(false);\n  const { id } = useParams();\n  if (!weekRows) return null;\n\n  const weekInfo = weekRows.filter(row => row.week === parseInt(id, 10)).pop();\n\n  if (!albumData || albumData.forWeek !== weekInfo.week) {\n    loadAlbumData(weekInfo);\n    return null;\n  }\n\n  // Use local state to stagger animation.\n  // Without this, the loader cover and the animation would happen at the same\n  // time, resulting in kind of a heavy load.\n  if (loaded && !shouldAnimateIn) {\n    setTimeout(() => setShouldAnimateIn(true), 200);\n  }\n\n  const items = [];\n  if (loaded && shouldAnimateIn) {\n    items.push(<AlbumArt key={albumData.image} imageUrl={albumData.image} />);\n    items.push(<AlbumMeta key={albumData} albumData={albumData} />);\n  }\n\n  return (\n    <main className=\"album-info\">\n      <CSSTransitionGroup\n        transitionName=\"album-info--anim\"\n        transitionEnterTimeout={items.length * 200 + 300}\n        transitionLeaveTimeout={300}\n      >\n        {items}\n      </CSSTransitionGroup>\n    </main>\n  );\n};\n\nexport default AlbumView;\n","import React from 'react';\n\nconst Footer = () => (\n  <div className=\"byline\">\n    A weekend hack by{' '}\n    <a\n      href=\"https://github.com/cupofjoakim\"\n      title=\"cupofjoakims github profile\"\n    >\n      @cupofjoakim{' '}\n      <span role=\"img\" aria-label=\"A waving hand\">\n        👋\n      </span>\n    </a>\n  </div>\n);\n\nexport default Footer;\n","const getWeek = (date = new Date()) => {\n  // Reset hours to prevent funky behaviour\n  date.setHours(0, 0, 0, 0);\n  // Thursday in current week decides the year.\n  date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n  // January 4 is always in week 1.\n  const week1 = new Date(date.getFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n  return (\n    1 +\n    Math.round(\n      ((date.getTime() - week1.getTime()) / 86400000 -\n        3 +\n        ((week1.getDay() + 6) % 7)) /\n        7,\n    )\n  );\n};\n\nexport { getWeek };\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { AlbumProvider } from './contexts/AlbumContext';\nimport WeekNumber from './components/WeekNumber';\nimport Backdrop from './components/Backdrop';\nimport AlbumView from './components/AlbumView';\nimport ListView from './components/ListView';\nimport Footer from './components/Footer';\n\nimport './App.css';\nimport { getWeek } from './util';\nimport { WeekProvider } from './contexts/WeekContext';\n\nfunction App() {\n  return (\n    <WeekProvider>\n      <AlbumProvider>\n        <Backdrop />\n        <div className=\"wrapper\">\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/week/:id\">\n                <WeekNumber />\n                <AlbumView />\n              </Route>\n              {/* <Route path=\"/week\">\n                <ListView />\n              </Route> */}\n              <Route path=\"/\">\n                <Redirect to={`/week/${getWeek()}`} />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n          <Footer />\n        </div>\n      </AlbumProvider>\n    </WeekProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}