{"version":3,"sources":["services/AlbumService/index.js","util/index.js","services/GoogleDriveService/index.js","contexts/AlbumContext.js","components/WeekNumber/PrevNextWeek.js","components/WeekNumber/WeekNavigation.js","components/WeekNumber/index.js","components/Backdrop/index.js","components/AlbumInfo/AlbumArt.js","components/AlbumInfo/ExternalLink.js","components/AlbumInfo/Tags.js","components/AlbumInfo/LinkIcon.js","components/AlbumInfo/ButtonLink.js","components/AlbumInfo/AlbumMeta.js","components/AlbumInfo/index.js","components/Loader/ProgressBar.js","components/Loader/index.js","App.js","serviceWorker.js","index.js"],"names":["buildParams","method","album","artist","autoCorrect","arguments","length","undefined","str","concat","encodeURIComponent","findYearInTags","tags","matchingTags","filter","tag","test","name","convertToAlbum","_ref","url","image","tracks","urls","type","year","getStorageKey","encodeURI","toLowerCase","cacheAlbum","data","sessionStorage","setItem","JSON","stringify","getCachedAlbum","albumData","getItem","parse","AlbumService","Error","cachedAlbumData","body","fetch","then","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","response","convertedAlbum","wrap","_context","prev","next","ok","json","sent","abrupt","stop","_x3","apply","this","getWeek","date","Date","setHours","setDate","getDate","getDay","week1","getFullYear","Math","round","getTime","getWeekFromUrl","weekParam","URL","window","location","href","searchParams","get","getWeekLink","week","pathname","getCell","spreadSheetRow","cellKey","$t","convertSpreadSheetToWeekInfo","spreadSheet","feed","entry","gsx$week","map","spotifyUrl","GoogleDriveService","_x","AlbumContext","React","createContext","AlbumProvider","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","resourcesToLoad","resourcesLoaded","weekNumber","weekRows","inherits","createClass","key","value","_componentDidMount","weekInfo","_this2","getWeekInfo","getAlbumByNameAndArtist","push","setState","Preload","onSingleImageComplete","updateLoadingProgress","_getWeekInfo","_callee2","_context2","getWeekRows","find","row","weekNum","history","replaceState","children","_this$state","react_default","createElement","Provider","loadingProgress","availableWeeks","Component","PrevNextWeek","displayedWeek","weeks","weekIndex","indexOf","isLastWeek","hasPreviousWeeks","react","className","title","WeekNavigation","_useContext","useContext","_useState","useState","_useState2","slicedToArray","setFilter","weeksToShow","baseFilter","toString","some","searchable","includes","currentWeek","onChange","target","placeholder","_ref3","WeekNumber_PrevNextWeek","_ref4","WeekNumber","WeekNumber_WeekNavigation","Backdrop","style","backgroundImage","AlbumArt","imageUrl","alt","src","ExternalLink","objectWithoutProperties","assign","rel","defaultProps","Tags","AlbumInfo_ExternalLink","SpotifyIcon","width","height","xmlns","fillRule","clipRule","fill","d","LastFMIcon","viewBox","LinkIcon","LinkIcon_SpotifyIcon","LinkIcon_LastFMIcon","ButtonLink","AlbumInfo_LinkIcon","getLinkText","AlbumMeta","_ref$albumData","lastFMUrl","artistUrl","substr","lastIndexOf","AlbumInfo_Tags","AlbumInfo_ButtonLink","AlbumInfo","shouldAnimateIn","setShouldAnimateIn","setTimeout","items","AlbumInfo_AlbumArt","AlbumInfo_AlbumMeta","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ProgressBar","percent","Loader","Loader_ProgressBar","PageContent","components_WeekNumber","components_AlbumInfo","role","aria-label","App","AlbumContext_AlbumProvider","components_Backdrop","App_PageContent","components_Loader","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f880f17.chunk.js","sourcesContent":["// Please don't use this :(\nconst PUBLIC_KEY = '2729fff6586466b0db95b377fc7597c3';\nconst BASE_URL = 'https://ws.audioscrobbler.com/2.0/';\n\nconst buildParams = (method, album, artist, autoCorrect = 1) => {\n  let str = '';\n  if (method) str = `${str}?method=${method}`;\n  if (album) str = `${str}&album=${encodeURIComponent(album)}`;\n  if (artist) str = `${str}&artist=${encodeURIComponent(artist)}`;\n  if (autoCorrect) str = `${str}&autocorrect=${autoCorrect}`;\n  return `${str}&api_key=${PUBLIC_KEY}&format=json`;\n};\n\nconst findYearInTags = tags => {\n  const matchingTags = tags.filter(\n    tag => /^\\d+$/.test(tag.name) && tag.name.length === 4,\n  );\n  if (matchingTags.length === 0) return null;\n  return matchingTags[0].name;\n};\n\nconst convertToAlbum = ({ name, artist, url, image, tracks, tags }) => ({\n  name,\n  artist,\n  urls: [{ type: 'lastfm', url }],\n  tracks,\n  tags: tags.tag,\n  year: findYearInTags(tags.tag),\n  image: image.length > 0 ? image[image.length - 1]['#text'] : null,\n});\n\nconst getStorageKey = (album = '', artist = '') =>\n  encodeURI(`${album.toLowerCase()}-${artist.toLowerCase()}`);\n\nconst cacheAlbum = (data, album, artist) => {\n  sessionStorage.setItem(getStorageKey(album, artist), JSON.stringify(data));\n};\n\nconst getCachedAlbum = (album, artist) => {\n  const albumData = sessionStorage.getItem(getStorageKey(album, artist));\n  return albumData ? JSON.parse(albumData) : null;\n};\n\nclass AlbumService {\n  static async getAlbumByNameAndArtist(album, artist) {\n    if (!album || !artist)\n      throw new Error('Both album and artist needs to be passed');\n\n    const cachedAlbumData = getCachedAlbum(album, artist);\n    if (cachedAlbumData) return cachedAlbumData;\n\n    const body = buildParams('album.getInfo', album, artist);\n    return fetch(BASE_URL + body).then(async res => {\n      if (!res.ok) throw new Error('Unable to get album data!');\n      const response = await res.json();\n      const convertedAlbum = convertToAlbum(response.album);\n      cacheAlbum(convertedAlbum, album, artist);\n      return convertedAlbum;\n    });\n  }\n}\n\nexport default AlbumService;\n","const getWeek = (date = new Date()) => {\n  // Reset hours to prevent funky behaviour\n  date.setHours(0, 0, 0, 0);\n  // Thursday in current week decides the year.\n  date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n  // January 4 is always in week 1.\n  const week1 = new Date(date.getFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n  return (\n    1 +\n    Math.round(\n      ((date.getTime() - week1.getTime()) / 86400000 -\n        3 +\n        ((week1.getDay() + 6) % 7)) /\n        7,\n    )\n  );\n};\n\nconst getWeekFromUrl = () => {\n  const weekParam = new URL(window.location.href).searchParams.get('week');\n  if (!weekParam) return null;\n  return +weekParam;\n};\n\nconst getWeekLink = week => `${window.location.pathname}?week=${week}`;\n\nconst updateWeekParam = weekNum => {\n  window.history.replaceState(\n    '',\n    '',\n    `${window.location.pathname}?week=${weekNum}`,\n  );\n};\n\nexport { getWeek, getWeekFromUrl, getWeekLink, updateWeekParam };\n","const SPREADSHEET_URL =\n  // eslint-disable-next-line max-len\n  'https://spreadsheets.google.com/feeds/list/1_7q9jusMZAvBBdk4cHoSg-LhjswU76k0XvGv1EC66u0/od6/public/values?alt=json';\n\nconst getSpreadSheet = () =>\n  fetch(SPREADSHEET_URL).then(async res => {\n    if (!res.ok) throw new Error('Unable to get google spreadsheet!');\n    const response = await res.json();\n    return response;\n  });\n\nconst getCell = (spreadSheetRow, cellKey) =>\n  spreadSheetRow[`gsx$${cellKey}`].$t;\n\nconst convertSpreadSheetToWeekInfo = spreadSheet => {\n  const weekEntries = spreadSheet.feed.entry.filter(entry => entry.gsx$week.$t);\n  return weekEntries.map(entry => ({\n    week: +getCell(entry, 'week'),\n    album: getCell(entry, 'album'),\n    artist: getCell(entry, 'artist'),\n    spotifyUrl: getCell(entry, 'spotify'),\n  }));\n};\n\nclass GoogleDriveService {\n  static async getWeekRows() {\n    const spreadSheet = await getSpreadSheet();\n    return convertSpreadSheetToWeekInfo(spreadSheet);\n  }\n}\n\nexport default GoogleDriveService;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Preload from 'image-preload';\nimport AlbumService from '../services/AlbumService';\nimport { getWeek, getWeekFromUrl, updateWeekParam } from '../util';\nimport GoogleDriveService from '../services/GoogleDriveService';\n\nconst AlbumContext = React.createContext();\n\nexport class AlbumProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resourcesToLoad: 3,\n      resourcesLoaded: 0,\n      weekNumber: getWeekFromUrl() || getWeek(),\n      weekRows: null,\n      albumData: null,\n    };\n  }\n\n  async componentDidMount() {\n    const weekInfo = await this.getWeekInfo();\n    const albumData = await AlbumService.getAlbumByNameAndArtist(\n      weekInfo.album,\n      weekInfo.artist,\n    );\n\n    albumData.urls.push({ type: 'spotify', url: weekInfo.spotifyUrl });\n    this.setState(\n      ({ resourcesLoaded }) => ({\n        albumData,\n        resourcesLoaded: resourcesLoaded + 1,\n      }),\n      () => {\n        Preload([albumData.image], {\n          onSingleImageComplete: () => {\n            this.updateLoadingProgress();\n          },\n        });\n      },\n    );\n  }\n\n  async getWeekInfo() {\n    const weekRows = await GoogleDriveService.getWeekRows();\n    this.setState({ weekRows });\n    this.updateLoadingProgress();\n\n    const { weekNumber } = this.state;\n    let weekInfo = weekRows.find(row => row.week === weekNumber);\n    // If week isn't available, just show latest week\n    if (!weekInfo) {\n      weekInfo = weekRows[weekRows.length - 1];\n      updateWeekParam(weekInfo.week);\n      this.setState({ weekNumber: weekInfo.week });\n    }\n    return weekInfo;\n  }\n\n  updateLoadingProgress() {\n    this.setState(({ resourcesLoaded }) => ({\n      resourcesLoaded: resourcesLoaded + 1,\n    }));\n  }\n\n  render() {\n    const { children } = this.props;\n    const {\n      weekNumber,\n      weekRows,\n      albumData,\n      resourcesLoaded,\n      resourcesToLoad,\n    } = this.state;\n\n    return (\n      <AlbumContext.Provider\n        value={{\n          weekNumber,\n          albumData,\n          loadingProgress: resourcesLoaded / resourcesToLoad,\n          availableWeeks: weekRows,\n        }}\n      >\n        {children}\n      </AlbumContext.Provider>\n    );\n  }\n}\n\nAlbumProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AlbumContext;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { getWeekLink } from '../../util';\n\nconst PrevNextWeek = ({ displayedWeek, weeks }) => {\n  const weekIndex = weeks.indexOf(displayedWeek);\n  const isLastWeek = weeks[weeks.length - 1] === displayedWeek;\n  const hasPreviousWeeks = weekIndex > 0;\n\n  return (\n    <Fragment>\n      {hasPreviousWeeks && (\n        <a\n          className=\"week-number--navigation right\"\n          href={getWeekLink(weeks[weekIndex - 1])}\n          title=\"Previous week\"\n        >\n          <span>←</span>\n        </a>\n      )}\n      {!isLastWeek && (\n        <a\n          className=\"week-number--navigation left\"\n          href={getWeekLink(weeks[weekIndex + 1])}\n          title=\"Next week\"\n        >\n          <span>→</span>\n        </a>\n      )}\n    </Fragment>\n  );\n};\n\nPrevNextWeek.propTypes = {\n  displayedWeek: PropTypes.number.isRequired,\n  weeks: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default PrevNextWeek;\n","import React, { useState, useContext, Fragment } from 'react';\nimport PrevNextWeek from './PrevNextWeek';\nimport { getWeekLink, getWeek } from '../../util';\nimport AlbumContext from '../../contexts/AlbumContext';\n\nconst WeekNavigation = () => {\n  const { weekNumber, availableWeeks } = useContext(AlbumContext);\n  const [filter, setFilter] = useState('');\n  if (!availableWeeks) return null;\n\n  const weeksToShow = availableWeeks.filter(({ week, artist, album }) => {\n    if (!filter) return true;\n    const baseFilter = filter.toLowerCase();\n    const searchables = [week.toString(), album, artist];\n    return searchables.some(searchable =>\n      searchable.toLowerCase().includes(baseFilter),\n    );\n  });\n  const currentWeek = getWeek();\n\n  return (\n    <Fragment>\n      <div className=\"week-number--nav-container\">\n        <div className=\"week-number--list-header\">\n          <input\n            className=\"filter-input\"\n            onChange={({ target: { value } }) => setFilter(value)}\n            placeholder=\"Filter albums\"\n          />\n        </div>\n        <div className=\"week-number--list\">\n          {weeksToShow.map(({ week, album, artist }) => (\n            <a\n              key={`listnav-${week}`}\n              className=\"week-number--list-item\"\n              href={getWeekLink(week)}\n            >\n              <div className=\"week-number--list-item--week\">\n                <span>{week}</span>\n              </div>\n              {album} - {artist}\n              {week === currentWeek && (\n                <span className=\"secondary-label\">(Current week)</span>\n              )}\n            </a>\n          ))}\n        </div>\n      </div>\n      <PrevNextWeek\n        displayedWeek={weekNumber}\n        weeks={availableWeeks.map(({ week }) => week)}\n      />\n    </Fragment>\n  );\n};\n\nexport default WeekNavigation;\n","import React, { useContext } from 'react';\nimport AlbumContext from '../../contexts/AlbumContext';\nimport WeekNavigation from './WeekNavigation';\nimport './style.css';\n\nconst WeekNumber = () => {\n  const { weekNumber } = useContext(AlbumContext);\n\n  return (\n    <div className=\"week-number\">\n      <div\n        className=\"week-number--current\"\n        title={`Now showing week ${weekNumber}`}\n      >\n        {weekNumber}\n      </div>\n      <WeekNavigation />\n    </div>\n  );\n};\n\nexport default WeekNumber;\n","import React, { useContext } from 'react';\nimport AlbumContext from '../../contexts/AlbumContext';\nimport './style.css';\n\nconst Backdrop = () => {\n  const { albumData } = useContext(AlbumContext);\n  if (!albumData) return null;\n\n  return (\n    <div\n      className=\"backdrop\"\n      style={{\n        backgroundImage: `url(\"${albumData.image}\")`,\n      }}\n    />\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AlbumArt = ({ imageUrl }) => (\n  <div key=\"art\" className=\"album-info--cover\">\n    <img alt=\"album cover\" src={imageUrl} />\n  </div>\n);\n\nAlbumArt.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n};\n\nexport default AlbumArt;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExternalLink = ({ url, children, ...props }) => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href={url} {...props}>\n    {children}\n  </a>\n);\n\nExternalLink.defaultProps = {\n  children: [],\n};\n\nExternalLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default ExternalLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from './ExternalLink';\n\nconst Tags = ({ tags }) => {\n  if (tags.length === 0) return null;\n\n  return (\n    <div className=\"tags\">\n      {tags.map(({ name, url }) => (\n        <ExternalLink key={name + url} className=\"tag\" url={url}>\n          #{name}\n        </ExternalLink>\n      ))}\n    </div>\n  );\n};\n\nTags.defaultProps = {\n  tags: [],\n};\n\nTags.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.any),\n};\n\nexport default Tags;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SpotifyIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  >\n    <path\n      fill=\"#1DB954\"\n      // eslint-disable-next-line max-len\n      d=\"M19.098 10.638c-3.868-2.297-10.248-2.508-13.941-1.387-.593.18-1.22-.155-1.399-.748-.18-.593.154-1.22.748-1.4 4.239-1.287 11.285-1.038 15.738 1.605.533.317.708 1.005.392 1.538-.316.533-1.005.709-1.538.392zm-.126 3.403c-.272.44-.847.578-1.287.308-3.225-1.982-8.142-2.557-11.958-1.399-.494.15-1.017-.129-1.167-.623-.149-.495.13-1.016.624-1.167 4.358-1.322 9.776-.682 13.48 1.595.44.27.578.847.308 1.286zm-1.469 3.267c-.215.354-.676.465-1.028.249-2.818-1.722-6.365-2.111-10.542-1.157-.402.092-.803-.16-.895-.562-.092-.403.159-.804.562-.896 4.571-1.045 8.492-.595 11.655 1.338.353.215.464.676.248 1.028zm-5.503-17.308c-6.627 0-12 5.373-12 12 0 6.628 5.373 12 12 12 6.628 0 12-5.372 12-12 0-6.627-5.372-12-12-12z\"\n    />\n  </svg>\n);\n\nconst LastFMIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      fill=\"#D41E08\"\n      // eslint-disable-next-line max-len\n      d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm3.664 15.889c-2.773 0-3.736-1.25-4.248-2.806l-.515-1.604c-.385-1.17-.834-2.084-2.244-2.084-.979 0-1.974.706-1.974 2.678 0 1.539.786 2.502 1.894 2.502 1.249 0 2.083-.931 2.083-.931l.515 1.396s-.866.85-2.679.85c-2.245-.001-3.496-1.316-3.496-3.754 0-2.534 1.251-4.025 3.607-4.025 2.133 0 3.208.77 3.881 2.854l.53 1.604c.385 1.171 1.058 2.021 2.678 2.021 1.091 0 1.668-.24 1.668-.834 0-.465-.273-.802-1.09-.994l-1.091-.256c-1.331-.321-1.861-1.01-1.861-2.101 0-1.748 1.412-2.293 2.854-2.293 1.638 0 2.63.593 2.759 2.037l-1.604.192c-.063-.69-.48-.979-1.251-.979-.706 0-1.138.321-1.138.866 0 .481.208.77.914.93l1.025.225c1.381.321 2.119.994 2.119 2.293 0 1.603-1.347 2.213-3.336 2.213z\"\n    />\n  </svg>\n);\n\nconst LinkIcon = ({ type }) => {\n  switch (type) {\n    case 'spotify':\n      return <SpotifyIcon />;\n    case 'lastfm':\n      return <LastFMIcon />;\n    default:\n      return null;\n  }\n};\n\nLinkIcon.propTypes = {\n  type: PropTypes.oneOf(['spotify', 'lastfm']).isRequired,\n};\n\nexport default LinkIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkIcon from './LinkIcon';\nimport ExternalLink from './ExternalLink';\n\nconst getLinkText = type => {\n  switch (type) {\n    case 'spotify':\n      return 'Listen on Spotify';\n    case 'lastfm':\n      return 'LastFm';\n    default:\n      return null;\n  }\n};\n\nconst ButtonLink = ({ type, url }) => (\n  <ExternalLink className=\"external-action\" url={url}>\n    <LinkIcon type={type} />\n    {getLinkText(type)}\n  </ExternalLink>\n);\n\nButtonLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ButtonLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from './ExternalLink';\nimport Tags from './Tags';\nimport ButtonLink from './ButtonLink';\n\nconst AlbumMeta = ({ albumData: { name, year, artist, urls, tags } }) => {\n  const lastFMUrl = urls.find(url => url.type === 'lastfm').url;\n  const artistUrl = lastFMUrl.substr(0, lastFMUrl.lastIndexOf('/'));\n\n  return (\n    <div key=\"information\" className=\"album-info--meta\">\n      <h1 className=\"heading\">\n        <ExternalLink url={lastFMUrl}>{name}</ExternalLink>\n      </h1>\n      <p className=\"subheading\">\n        <ExternalLink url={artistUrl}>{artist}</ExternalLink>{' '}\n        <span className=\"year\">{year}</span>\n      </p>\n      <Tags tags={tags} />\n      {urls.map(({ type, url }) => (\n        <ButtonLink key={type} type={type} url={url} />\n      ))}\n    </div>\n  );\n};\n\nAlbumMeta.propTypes = {\n  albumData: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    year: PropTypes.string,\n    artist: PropTypes.string.isRequired,\n    urls: PropTypes.array.isRequired,\n    tags: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default AlbumMeta;\n","import React, { useContext, useState } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nimport AlbumContext from '../../contexts/AlbumContext';\nimport AlbumArt from './AlbumArt';\nimport AlbumMeta from './AlbumMeta';\nimport './style.css';\n\nconst AlbumInfo = () => {\n  const { albumData, loadingProgress } = useContext(AlbumContext);\n  const [shouldAnimateIn, setShouldAnimateIn] = useState(false);\n  if (!albumData) return null;\n\n  // Use local state to stagger animation.\n  // Without this, the loader cover and the animation would happen at the same\n  // time, resulting in kind of a heavy load.\n  if (loadingProgress === 1 && !shouldAnimateIn) {\n    setTimeout(() => setShouldAnimateIn(true), 200);\n  }\n\n  const items = [];\n  if (loadingProgress === 1 && shouldAnimateIn) {\n    items.push(<AlbumArt key={albumData.image} imageUrl={albumData.image} />);\n    items.push(<AlbumMeta key={albumData} albumData={albumData} />);\n  }\n\n  return (\n    <main className=\"album-info\">\n      <CSSTransitionGroup\n        transitionName=\"album-info--anim\"\n        transitionEnterTimeout={items.length * 200 + 300}\n        transitionLeaveTimeout={300}\n      >\n        {items}\n      </CSSTransitionGroup>\n    </main>\n  );\n};\n\nexport default AlbumInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProgressBar = ({ percent }) => (\n  <div className=\"progress\">\n    <div className=\"progress--bar\" style={{ width: `${percent}%` }} />\n  </div>\n);\n\nProgressBar.propTypes = {\n  percent: PropTypes.number.isRequired,\n};\n\nexport default ProgressBar;\n","import React, { useContext } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport AlbumContext from '../../contexts/AlbumContext';\nimport ProgressBar from './ProgressBar';\nimport './style.css';\n\nconst Loader = () => {\n  const { loadingProgress } = useContext(AlbumContext);\n\n  const items = [];\n  if (loadingProgress !== 1) {\n    items.push(\n      <div key=\"loadingcover\" className=\"loading-cover\">\n        <ProgressBar percent={loadingProgress * 100} />\n        <div className=\"loading-message\">Loading album data...</div>\n      </div>,\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      transitionName=\"loading-anim\"\n      transitionEnterTimeout={100}\n      transitionLeaveTimeout={300}\n    >\n      {items}\n    </CSSTransitionGroup>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { AlbumProvider } from './contexts/AlbumContext';\nimport WeekNumber from './components/WeekNumber';\nimport Backdrop from './components/Backdrop';\nimport AlbumInfo from './components/AlbumInfo';\nimport Loader from './components/Loader';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <AlbumProvider>\n      <Backdrop />\n      <PageContent />\n      <Loader />\n    </AlbumProvider>\n  );\n}\n\nconst PageContent = () => (\n  <div className=\"wrapper\">\n    <WeekNumber />\n    <AlbumInfo />\n    <div className=\"byline\">\n      A weekend hack by{' '}\n      <a\n        href=\"https://github.com/cupofjoakim\"\n        title=\"cupofjoakims github profile\"\n      >\n        @cupofjoakim{' '}\n        <span role=\"img\" aria-label=\"A waving hand\">\n          👋\n        </span>\n      </a>\n    </div>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}